[
  {
    "objectID": "riparian.html",
    "href": "riparian.html",
    "title": "Riparian Hydro‑Ecology",
    "section": "",
    "text": "Note\n\n\n\n\n\nOriginal code flattened the hydrograph It’s a limitation of the ggplot2 package by design. ggplot2 deliberately discourages dual‑axis plots. Hadley Wickham’s design rationale is that a figure should have one visual scale per aesthetic; two different units mapped to the same aesthetic (y‑position) can mislead. If dual axes are unavoidable, the relationship must be linear so viewers can mentally transform one to the other.\nBecause of that philosophy, ggplot2 offers only a re‑labelling tool (sec_axis), not a second independent scale.\nHence the manual work you have to do with when forcing ggplot to do this:\n\nCalculate a scale factor k so the secondary data fit on the primary axis.\n\nMultiply the data in the layer (flow_acft * k).\n\nProvide the inverse transformation (~ . / k) in sec.axis.\n\nFormat tick labels yourself (scales::comma_format()).\n\nIt’s easier to do this in python - letting you call ax.twinx() and be done, but in ggplot2 the extra arithmetic keeps the core grammar simple and guards against misleading charts—at the cost of annoyances and manual work when forcing it to do dual axes.\n\nBefore, the histogram’s axis stopped around 15 trees, so flows > 100 000 acre‑ft were squeezed into 0 – 15 so the line looked flat.\n\nIn a nutshell, you have to first rescale the flow values\nk <- max(tree_cnt$n_trees) / max(flow_df$flow_acft)\ngeom_line(aes(y = flow_acft * k, colour = station))\nThen undo that scaling on the secondary axis\nscale_y_continuous(\n  name     = \"Number of Trees\",\n  sec.axis = sec_axis(\n    ~ . / k,\n    name   = \"Flow (acre‑ft)\",\n    labels = scales::comma_format()\n  )\n)\nhere’s a reproducible code below. Note - I wrote two functions which can be updated and called more easily than copying code over and over to iterate. Hope this helps!\n\n\n\n\n\nlibraries\nlibrary(tidyverse)\nlibrary(here)\nlibrary(scales)\n\n\n\n\nfunctions\n#────────────────────────────────────────────────────────────\n# 1) multi‑station flow\n#────────────────────────────────────────────────────────────\nplot_tree_vs_flow <- function(tree_df,\n                              flow_df,\n                              binwidth   = 1,\n                              fill_cols  = c(off      = \"brown4\",\n                                             on       = \"turquoise4\",\n                                             onfire   = \"darkorange1\",\n                                             `onfire C` = \"gold\",\n                                             onsuppl  = \"blue2\")) {\n\n  ## histogram counts ---------------------------------------------------------\n  tree_cnt <- tree_df %>%\n    count(strata_clone, comb_date, name = \"n_trees\")\n\n  facets  <- unique(tree_cnt$strata_clone)\n  # min_yr  <- min(tree_cnt$comb_date, na.rm = TRUE)\n  min_yr  <- 1885\n  # max_yr  <- max(tree_cnt$comb_date, na.rm = TRUE)\n  max_yr <- 2025\n\n  ## flow data (drop stray strata column if present) --------------------------\n  flow_base <- flow_df %>%\n    select(-any_of(\"strata_clone\")) %>%\n    mutate(comb_date = as.integer(comb_date))\n\n  k <- max(tree_cnt$n_trees, na.rm = TRUE) /\n       max(flow_base$flow_acft, na.rm = TRUE)\n\n  # flow_plot <- flow_base %>%\n  #   mutate(flow_scaled = flow_acft * k) %>%\n  #   tidyr::crossing(strata_clone = facets)\n\n\n  ## figure -------------------------------------------------------------------\n  ggplot() +\n    geom_col(data = tree_cnt,\n             aes(comb_date, n_trees, fill = strata_clone),\n             width = binwidth, colour = \"black\") +\n\n    # geom_line(data = flow_plot,\n    #           aes(comb_date, flow_scaled, colour = station),\n    #           size = .7, alpha = .8) +\n      geom_line(data = flow_base,\n                aes(comb_date, flow_acft * k, colour = station),\n                size = .7, alpha = .8)+\n    scale_y_continuous(\n      name     = \"Number of Trees\",\n      sec.axis = sec_axis(~ . / k,\n                          name   = \"Flow (acre‑ft)\",\n                          labels = comma_format())\n    ) +\n    scale_x_continuous(\n      breaks       = seq(min_yr, max_yr, by = 5),  # label every 5 yrs\n      minor_breaks = seq(min_yr, max_yr, by = 1),   # grid every year\n      name         = \"Recruitment year\",\n      labels       = number_format(accuracy = 1)\n    ) +\n    scale_fill_manual(values = fill_cols, name = NULL) +\n    scale_colour_brewer(palette = \"Dark2\", name = \"Station\") +\n    facet_grid(strata_clone ~ .) +\n    theme_light() +\n    theme(axis.text.x  = element_text(angle = 90, vjust = 0.5, hjust = 1, size = 6),\n          legend.position = \"bottom\")\n}\n\n#────────────────────────────────────────────────────────────\n# 2) OV runoff\n#────────────────────────────────────────────────────────────\nplot_tree_vs_runoff <- function(tree_df,\n                                runoff_df,\n                                binwidth   = 1,\n                                fill_cols  = c(off      = \"brown4\",\n                                               on       = \"turquoise4\",\n                                               onfire   = \"darkorange1\",\n                                               `onfire C` = \"gold\",\n                                               onsuppl  = \"blue2\")) {\n\n  tree_cnt <- tree_df %>%\n    count(strata_clone, comb_date, name = \"n_trees\")\n\n  facets  <- unique(tree_cnt$strata_clone)\n  # min_yr  <- min(tree_cnt$comb_date, na.rm = TRUE)\n  min_yr  <- 1885\n  # max_yr  <- max(tree_cnt$comb_date, na.rm = TRUE)\n  max_yr <- 2025\n\n  runoff_base <- runoff_df %>%\n    select(-any_of(\"strata_clone\")) %>%\n    mutate(comb_date = as.integer(comb_date))\n\n  k <- max(tree_cnt$n_trees, na.rm = TRUE) /\n       max(runoff_base$ovr_acft, na.rm = TRUE)\n\n  # runoff_plot <- runoff_base %>%\n  #   mutate(run_scaled = ovr_acft * k) %>%\n  #   tidyr::crossing(strata_clone = facets)\n\n  ggplot() +\n    geom_col(data = tree_cnt,\n             aes(comb_date, n_trees, fill = strata_clone),\n             width = binwidth, colour = \"black\") +\n\n    # geom_line(data = runoff_plot,\n    #           aes(comb_date, run_scaled),\n    #           colour = \"black\", size = .9) +\n    geom_line(data = runoff_base,\n                aes(comb_date, ovr_acft * k), colour = \"black\", size = .9)+\n    scale_y_continuous(\n      name     = \"Number of Trees\",\n      sec.axis = sec_axis(~ . / k,\n                          name   = \"Total Runoff (acre‑ft)\",\n                          labels = comma_format())\n    ) +\n    scale_x_continuous(\n      breaks       = seq(min_yr, max_yr, by = 5),\n      minor_breaks = seq(min_yr, max_yr, by = 1),\n      name         = \"Recruitment year\",\n      labels       = number_format(accuracy = 1)\n    ) +\n    scale_fill_manual(values = fill_cols, name = NULL) +\n    facet_grid(strata_clone ~ .) +\n    theme_light() +\n    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, size = 6),\n          legend.position = \"bottom\")\n}\n\n\n\n\nload-data\n## load data\ntrees   <- read_csv(here(\"data\",\"cored_trees_plt.csv\"),  show_col_types = FALSE)\nflows   <- read_csv(here(\"data\",\"cored_trees_hy_test.csv\"), show_col_types = FALSE)\nrunoff  <- read_csv(here(\"data\",\"cored_trees_run.csv\"), show_col_types = FALSE)\n\n\n\n\ncall-multi-station\n## multi‑station figure\nplot_tree_vs_flow(trees, flows)\n\n\n\n\n\n\n\ncall-total-runoff\n## OV‑runoff figure\nplot_tree_vs_runoff(trees, runoff)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Home",
    "section": "",
    "text": "Welcome! Use the Plots tab to view the riparian recruitment & hydrograph overlays.\n\nData: in /data\nSource: riparian.qmd"
  }
]